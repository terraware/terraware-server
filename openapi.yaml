openapi: 3.0.1
info:
  title: Terraware Seed Bank
  description: Local server API for seed banks
  license:
    name: MIT
  version: 0.1-SNAPSHOT
servers:
- url: http://localhost:32109
  description: Generated server url
paths:
  /api/v1/seedbank/accession:
    post:
      tags:
      - SeedBankApp
      summary: Create a new accession.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessionRequestPayload'
        required: true
      responses:
        "200":
          description: "The accession was created successfully. Response includes\
            \ fields populated by the server, including the accession number."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessionResponsePayload'
  /api/v1/seedbank/accession/{accessionNumber}:
    get:
      tags:
      - SeedBankApp
      summary: Retrieve an existing accession.
      operationId: read
      parameters:
      - name: accessionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessionResponsePayload'
        "404":
          description: The requested resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
    put:
      tags:
      - SeedBankApp
      summary: Update an existing accession.
      operationId: update
      parameters:
      - name: accessionNumber
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessionRequestPayload'
        required: true
      responses:
        "200":
          description: The accession was updated successfully. Response includes fields
            populated or modified by the server as a result of the update.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessionResponsePayload'
        "404":
          description: The specified accession doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
  /api/v1/seedbank/accession/{accessionNumber}/photo:
    get:
      tags:
      - SeedBankApp
      summary: List all the available photos for an accession.
      operationId: listPhotos
      parameters:
      - name: accessionNumber
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The accession's photos are listed in the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPhotosResponsePayload'
        "404":
          description: The accession does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
  /api/v1/seedbank/accession/{accessionNumber}/photo/{photoFilename}:
    get:
      tags:
      - SeedBankApp
      summary: Retrieve a specific photo from an accession.
      operationId: getPhoto
      parameters:
      - name: accessionNumber
        in: path
        required: true
        schema:
          type: string
      - name: photoFilename
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: The photo was successfully retrieved.
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        "404":
          description: "The accession does not exist, or does not have a photo with\
            \ the requested filename."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
    post:
      tags:
      - SeedBankApp
      summary: Upload a new photo for an accession.
      operationId: uploadPhoto
      parameters:
      - name: accessionNumber
        in: path
        required: true
        schema:
          type: string
      - name: photoFilename
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                metadata:
                  $ref: '#/components/schemas/UploadPhotoMetadataPayload'
            encoding:
              file:
                contentType: image/jpeg
      responses:
        "200":
          description: The requested operation succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponsePayload'
        "404":
          description: The specified accession does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
        "409":
          description: The requested photo already exists on the accession.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
  /api/v1/seedbank/notification:
    get:
      tags:
      - SeedBankApp
      summary: Get a list of recent notifications
      operationId: listAll
      parameters:
      - name: since
        in: query
        description: Don't return notifications older than this; default is 1 month
          ago
        required: false
        schema:
          type: string
          format: date-time
      - name: limit
        in: query
        description: Return at most this many notifications; default is no limit
        required: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: Notifications in reverse time order (newest first).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
  /api/v1/seedbank/notification/all/markRead:
    post:
      tags:
      - SeedBankApp
      summary: Mark all notifications as read.
      operationId: markAllRead
      responses:
        "200":
          description: All notifications have been marked as read.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponsePayload'
  /api/v1/seedbank/notification/all/markUnread:
    post:
      tags:
      - SeedBankApp
      summary: Mark all notifications as unread.
      description: For development and testing of notifications. Not available in
        production.
      operationId: markAllUnread
      responses:
        "200":
          description: All notifications have been marked as unread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponsePayload'
  /api/v1/seedbank/notification/{id}/markRead:
    post:
      tags:
      - SeedBankApp
      summary: Mark a specific notification as read.
      operationId: markRead
      parameters:
      - name: id
        in: path
        description: ID of notification to mark as read
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Notification has been marked as read.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleSuccessResponsePayload'
        "404":
          description: The requested notification ID was not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleErrorResponsePayload'
  /api/v1/seedbank/search:
    post:
      tags:
      - SeedBankApp
      summary: Searches for accessions based on filter criteria.
      operationId: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponsePayload'
  /api/v1/seedbank/summary:
    get:
      tags:
      - SeedBankApp
      summary: Get summary statistics about the seed bank
      operationId: getSummary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SummaryResponse'
  /api/v1/seedbank/values:
    post:
      tags:
      - SeedBankApp
      operationId: listFieldValues
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListFieldValuesRequestPayload'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFieldValuesResponsePayload'
  /api/v1/seedbank/values/storageLocation:
    get:
      tags:
      - SeedBankApp
      operationId: getStorageLocations
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLocationsResponsePayload'
components:
  schemas:
    AccessionPayload:
      required:
      - accessionNumber
      - state
      - status
      type: object
      properties:
        accessionNumber:
          type: string
        state:
          type: string
          enum:
          - Pending
          - Processing
          - Processed
          - Drying
          - Dried
          - In Storage
          - Withdrawn
        status:
          type: string
          enum:
          - Inactive
          - Active
        species:
          type: string
        family:
          type: string
        numberOfTrees:
          type: integer
          format: int32
        founderId:
          type: string
        endangered:
          type: boolean
        rare:
          type: boolean
        fieldNotes:
          type: string
        collectedDate:
          type: string
          format: date
        receivedDate:
          type: string
          format: date
        primaryCollector:
          type: string
        secondaryCollectors:
          uniqueItems: true
          type: array
          items:
            type: string
        siteLocation:
          type: string
        landowner:
          type: string
        environmentalNotes:
          type: string
        processingStartDate:
          type: string
          format: date
        processingMethod:
          type: string
          enum:
          - Count
          - Weight
        seedsCounted:
          type: integer
          format: int32
        subsetWeightGrams:
          type: number
        totalWeightGrams:
          type: number
        subsetCount:
          type: integer
          format: int32
        estimatedSeedCount:
          type: integer
          format: int32
        targetStorageCondition:
          type: string
          enum:
          - Refrigerator
          - Freezer
        dryingStartDate:
          type: string
          format: date
        dryingEndDate:
          type: string
          format: date
        dryingMoveDate:
          type: string
          format: date
        processingNotes:
          type: string
        processingStaffResponsible:
          type: string
        bagNumbers:
          uniqueItems: true
          type: array
          items:
            type: string
        storageStartDate:
          type: string
          format: date
        storagePackets:
          type: integer
          format: int32
        storageLocation:
          type: string
        storageCondition:
          type: string
          enum:
          - Refrigerator
          - Freezer
        storageNotes:
          type: string
        storageStaffResponsible:
          type: string
        photoFilenames:
          uniqueItems: true
          type: array
          items:
            type: string
        geolocations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Geolocation'
        germinationTestTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Lab
            - Nursery
        germinationTests:
          type: array
          items:
            $ref: '#/components/schemas/GerminationTestPayload'
        withdrawals:
          type: array
          items:
            $ref: '#/components/schemas/WithdrawalPayload'
        cutTestSeedsFilled:
          type: integer
          format: int32
        cutTestSeedsEmpty:
          type: integer
          format: int32
        cutTestSeedsCompromised:
          type: integer
          format: int32
        latestGerminationTestDate:
          type: string
          format: date
        latestViabilityPercent:
          type: integer
          format: int32
        totalViabilityPercent:
          type: integer
          format: int32
    CreateAccessionRequestPayload:
      type: object
      properties:
        species:
          type: string
        family:
          type: string
        numberOfTrees:
          type: integer
          format: int32
        founderId:
          type: string
        endangered:
          type: boolean
        rare:
          type: boolean
        fieldNotes:
          type: string
        collectedDate:
          type: string
          format: date
        receivedDate:
          type: string
          format: date
        primaryCollector:
          type: string
        secondaryCollectors:
          uniqueItems: true
          type: array
          items:
            type: string
        siteLocation:
          type: string
        landowner:
          type: string
        environmentalNotes:
          type: string
        bagNumbers:
          uniqueItems: true
          type: array
          items:
            type: string
        geolocations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Geolocation'
        germinationTestTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Lab
            - Nursery
        germinationTests:
          type: array
          items:
            $ref: '#/components/schemas/GerminationTestPayload'
    CreateAccessionResponsePayload:
      required:
      - accession
      - status
      type: object
      properties:
        accession:
          $ref: '#/components/schemas/AccessionPayload'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    ErrorDetails:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    FieldValuesPayload:
      required:
      - partial
      - values
      type: object
      properties:
        values:
          type: array
          items:
            type: string
        partial:
          type: boolean
    Geolocation:
      required:
      - latitude
      - longitude
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
        accuracy:
          type: number
    GerminationPayload:
      required:
      - recordingDate
      - seedsGerminated
      type: object
      properties:
        recordingDate:
          type: string
          format: date
        seedsGerminated:
          type: integer
          format: int32
    GerminationTestPayload:
      required:
      - testType
      type: object
      properties:
        id:
          type: string
          description: Server-assigned unique ID of this germination test. Null when
            creating a new test.
        testType:
          type: string
          description: Which type of test is described. At most one of each test type
            is allowed.
          enum:
          - Lab
          - Nursery
        startDate:
          type: string
          format: date
        seedType:
          type: string
          enum:
          - Fresh
          - Stored
        substrate:
          type: string
          enum:
          - Nursery Media
          - Agar Petri Dish
          - Paper Petri Dish
          - Other
        treatment:
          type: string
          enum:
          - Soak
          - Scarify
          - GA3
          - Stratification
          - Other
        notes:
          type: string
        staffResponsible:
          type: string
        seedsSown:
          type: integer
          format: int32
        germinations:
          type: array
          items:
            $ref: '#/components/schemas/GerminationPayload'
    GetAccessionResponsePayload:
      required:
      - accession
      - status
      type: object
      properties:
        accession:
          $ref: '#/components/schemas/AccessionPayload'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    ListFieldValuesRequestPayload:
      required:
      - fields
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchField'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/SearchFilter'
    ListFieldValuesResponsePayload:
      required:
      - results
      - status
      type: object
      properties:
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/FieldValuesPayload'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    ListPhotosResponseElement:
      required:
      - capturedTime
      - filename
      - size
      type: object
      properties:
        filename:
          type: string
        size:
          type: integer
          format: int32
        capturedTime:
          type: string
          format: date-time
        latitude:
          type: number
        longitude:
          type: number
        gpsAccuracy:
          type: integer
          description: GPS accuracy in meters.
          format: int32
    ListPhotosResponsePayload:
      required:
      - photos
      - status
      type: object
      properties:
        photos:
          type: array
          items:
            $ref: '#/components/schemas/ListPhotosResponseElement'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    NotificationListResponse:
      required:
      - notifications
      - status
      type: object
      properties:
        notifications:
          type: array
          items:
            $ref: '#/components/schemas/NotificationPayload'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    NotificationPayload:
      required:
      - id
      - read
      - text
      - timestamp
      - type
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for this notification. Clients should treat
            it as opaque.
          example: "12345"
        timestamp:
          type: string
          format: date-time
        type:
          type: string
          enum:
          - Alert
          - State
          - Date
        read:
          type: boolean
          description: "If true, this notification has been marked as read."
        text:
          type: string
          description: Plain-text body of notification.
          example: Accession XYZ is ready to be dried.
        accessionNumber:
          type: string
          description: "For accession notifications, which accession caused the notification."
        state:
          type: string
          description: "For state notifications, which state is being summarized."
          enum:
          - Pending
          - Processing
          - Processed
          - Drying
          - Dried
          - In Storage
          - Withdrawn
    SearchField:
      type: string
      enum:
      - accessionNumber
      - collectedDate
      - collectionNotes
      - cutTestSeedsCompromised
      - cutTestSeedsEmpty
      - cutTestSeedsFilled
      - dryingEndDate
      - dryingMoveDate
      - dryingStartDate
      - endangered
      - estimatedSeeds
      - estimatedSeedsIncoming
      - family
      - geolocation
      - germinationPercentGerminated
      - germinationSeedType
      - germinationSeedsGerminated
      - germinationSeedsSown
      - germinationStartDate
      - germinationSubstrate
      - germinationTestNotes
      - germinationTestType
      - germinationTreatment
      - landowner
      - latestGerminationTestDate
      - latestViabilityPercent
      - primaryCollector
      - processingMethod
      - processingNotes
      - processingStartDate
      - rare
      - receivedDate
      - seedsCounted
      - siteLocation
      - species
      - state
      - status
      - storageCondition
      - storageLocation
      - storageNotes
      - storagePackets
      - storageStartDate
      - targetStorageCondition
      - totalViabilityPercent
      - treesCollectedFrom
      - withdrawalDate
      - withdrawalDestination
      - withdrawalGrams
      - withdrawalNotes
      - withdrawalPurpose
      - withdrawalSeeds
      - withdrawalSeedsRemaining
    SearchFilter:
      required:
      - field
      - type
      - values
      type: object
      properties:
        field:
          $ref: '#/components/schemas/SearchField'
        values:
          type: array
          items:
            type: string
        type:
          type: string
          enum:
          - Exact
          - Fuzzy
          - Range
    SearchRequestPayload:
      required:
      - count
      - fields
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: '#/components/schemas/SearchField'
        sortOrder:
          type: array
          items:
            $ref: '#/components/schemas/SearchSortOrderElement'
        filters:
          type: array
          items:
            $ref: '#/components/schemas/SearchFilter'
        cursor:
          type: string
        count:
          type: integer
          format: int32
          default: 10
    SearchResponsePayload:
      required:
      - results
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        cursor:
          type: string
    SearchSortOrderElement:
      required:
      - field
      type: object
      properties:
        field:
          $ref: '#/components/schemas/SearchField'
        direction:
          type: string
          default: Ascending
          enum:
          - Ascending
          - Descending
    SimpleErrorResponsePayload:
      required:
      - error
      - status
      type: object
      properties:
        error:
          $ref: '#/components/schemas/ErrorDetails'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    SimpleSuccessResponsePayload:
      required:
      - status
      type: object
      properties:
        status:
          $ref: '#/components/schemas/SuccessOrError'
    StorageLocationDetails:
      required:
      - storageCondition
      - storageLocation
      type: object
      properties:
        storageLocation:
          type: string
        storageCondition:
          type: string
          enum:
          - Refrigerator
          - Freezer
    StorageLocationsResponsePayload:
      required:
      - locations
      - status
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/StorageLocationDetails'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    SuccessOrError:
      type: string
      description: Indicates of success or failure of the requested operation.
      enum:
      - ok
      - error
    SummaryResponse:
      required:
      - activeAccessions
      - families
      - overdueDriedAccessions
      - overduePendingAccessions
      - overdueProcessedAccessions
      - recentlyWithdrawnAccessions
      - species
      type: object
      properties:
        activeAccessions:
          $ref: '#/components/schemas/SummaryStatistic'
        species:
          $ref: '#/components/schemas/SummaryStatistic'
        families:
          $ref: '#/components/schemas/SummaryStatistic'
        overduePendingAccessions:
          type: integer
          description: Number of accessions in Pending state overdue for processing
          format: int32
        overdueProcessedAccessions:
          type: integer
          description: Number of accessions in Processed state overdue for drying
          format: int32
        overdueDriedAccessions:
          type: integer
          description: Number of accessions in Dried state overdue for storage
          format: int32
        recentlyWithdrawnAccessions:
          type: integer
          description: Number of accessions withdrawn so far this week
          format: int32
      description: Summary of important statistics about the seed bank for the Summary
        page.
    SummaryStatistic:
      required:
      - current
      - lastWeek
      type: object
      properties:
        current:
          type: integer
          format: int32
        lastWeek:
          type: integer
          format: int32
      description: The current value and value as of last week for a summary statistic
    UpdateAccessionRequestPayload:
      type: object
      properties:
        species:
          type: string
        family:
          type: string
        numberOfTrees:
          type: integer
          format: int32
        founderId:
          type: string
        endangered:
          type: boolean
        rare:
          type: boolean
        fieldNotes:
          type: string
        collectedDate:
          type: string
          format: date
        receivedDate:
          type: string
          format: date
        primaryCollector:
          type: string
        secondaryCollectors:
          uniqueItems: true
          type: array
          items:
            type: string
        siteLocation:
          type: string
        landowner:
          type: string
        environmentalNotes:
          type: string
        processingStartDate:
          type: string
          format: date
        processingMethod:
          type: string
          enum:
          - Count
          - Weight
        seedsCounted:
          type: integer
          format: int32
        subsetWeightGrams:
          type: number
        totalWeightGrams:
          type: number
        subsetCount:
          type: integer
          format: int32
        estimatedSeedCount:
          type: integer
          format: int32
        targetStorageCondition:
          type: string
          enum:
          - Refrigerator
          - Freezer
        dryingStartDate:
          type: string
          format: date
        dryingEndDate:
          type: string
          format: date
        dryingMoveDate:
          type: string
          format: date
        processingNotes:
          type: string
        processingStaffResponsible:
          type: string
        bagNumbers:
          uniqueItems: true
          type: array
          items:
            type: string
        storageStartDate:
          type: string
          format: date
        storagePackets:
          type: integer
          format: int32
        storageLocation:
          type: string
        storageNotes:
          type: string
        storageStaffResponsible:
          type: string
        photoFilenames:
          uniqueItems: true
          type: array
          items:
            type: string
        geolocations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Geolocation'
        germinationTestTypes:
          uniqueItems: true
          type: array
          items:
            type: string
            enum:
            - Lab
            - Nursery
        cutTestSeedsCompromised:
          type: integer
          format: int32
        cutTestSeedsEmpty:
          type: integer
          format: int32
        cutTestSeedsFilled:
          type: integer
          format: int32
        germinationTests:
          type: array
          items:
            $ref: '#/components/schemas/GerminationTestPayload'
        withdrawals:
          type: array
          items:
            $ref: '#/components/schemas/WithdrawalPayload'
    UpdateAccessionResponsePayload:
      required:
      - accession
      - status
      type: object
      properties:
        accession:
          $ref: '#/components/schemas/AccessionPayload'
        status:
          $ref: '#/components/schemas/SuccessOrError'
    UploadPhotoMetadataPayload:
      required:
      - capturedTime
      type: object
      properties:
        capturedTime:
          type: string
          format: date-time
        latitude:
          type: number
        longitude:
          type: number
        gpsAccuracy:
          type: integer
          description: GPS accuracy in meters.
          format: int32
    WithdrawalPayload:
      required:
      - date
      - purpose
      type: object
      properties:
        id:
          type: integer
          description: "Server-assigned unique ID of this withdrawal, its ID. Omit\
            \ when creating a new withdrawal."
          format: int64
        date:
          type: string
          format: date
        purpose:
          type: string
          enum:
          - Propagation
          - Outreach or Education
          - Research
          - Broadcast
          - Share with Another Site
          - Other
        seedsWithdrawn:
          type: integer
          description: "Number of seeds withdrawn. If gramsWithdrawn is specified,\
            \ this is a server-calculated estimate based on seed weight and is ignored\
            \ (and may be omitted) when creating a new withdrawal."
          format: int32
        gramsWithdrawn:
          type: number
          description: "If the withdrawal was measured by weight, its weight in grams.\
            \ Null if the withdrawal has an exact seed count. If this is non-null,\
            \ seedsWithdrawn is a server-calculated estimate. Weight-based withdrawals\
            \ are only allowed for accessions whose seed counts were estimated by\
            \ weight."
        destination:
          type: string
        notes:
          type: string
        staffResponsible:
          type: string
  securitySchemes:
    ApiKey:
      type: http
      description: Key-based authentication for non-browser-based clients. Username
        is currently ignored; password should be the API key.
      scheme: basic
