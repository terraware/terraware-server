-- We want deliveries to be associated with planting sites and optionally with plots. If they are
-- associated with both, the planting site has to be the right one for the plot.
--
-- Obviously we'll line everything up in the application code, but we want to guard against bugs
-- using database constraints too.
--
-- To make that work, we need to use compound foreign keys: keep track of the plot's planting site
-- and make sure the planting site of the plot is the same as the planting site of the planting zone
-- of the plot. Compound foreign keys require that the referenced list of columns have a unique
-- constraint.

-- First, add and backfill a non-nullable planting site ID column on the plots table. It can be
-- inferred from the planting zone ID already, but it needs to be added as a column so we can
-- use it as the target of the foreign-key constraint we'll be adding below.
ALTER TABLE tracking.plots
    ADD COLUMN planting_site_id BIGINT REFERENCES tracking.planting_sites ON DELETE CASCADE;

UPDATE tracking.plots p
SET planting_site_id = (SELECT planting_site_id
                        FROM tracking.planting_zones pz
                        WHERE p.planting_zone_id = pz.id)
WHERE planting_site_id IS NULL;

ALTER TABLE tracking.plots
    ALTER COLUMN planting_site_id SET NOT NULL;

-- id is already required to be unique on planting_zones, so this constraint is redundant on its
-- own, but we need it to support the foreign key constraint on the plots table.
ALTER TABLE tracking.planting_zones
    ADD UNIQUE (planting_site_id, id);

-- This points at the unique key we just added, and ensures that the plot's planting site ID agrees
-- with the planting site ID of the plot's planting zone.
ALTER TABLE tracking.plots
    ADD FOREIGN KEY (planting_site_id, planting_zone_id)
        REFERENCES tracking.planting_zones (planting_site_id, id);

CREATE TABLE tracking.deliveries
(
    id               BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    withdrawal_id    BIGINT NOT NULL REFERENCES nursery.withdrawals ON DELETE CASCADE,
    planting_site_id BIGINT NOT NULL REFERENCES tracking.planting_sites ON DELETE CASCADE,
    created_by       BIGINT NOT NULL REFERENCES users,
    created_time     TIMESTAMP WITH TIME ZONE NOT NULL,
    modified_by      BIGINT NOT NULL REFERENCES users,
    modified_time    TIMESTAMP WITH TIME ZONE NOT NULL,
    reassigned_by    BIGINT REFERENCES users,
    reassigned_time  TIMESTAMP WITH TIME ZONE,
    UNIQUE (withdrawal_id),
    UNIQUE (planting_site_id, id)
);

CREATE TABLE tracking.planting_types
(
    id   INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

-- On the plantings table, we want to ensure that the planting site ID matches the plot ID, which
-- means we need a unique key for that table's foreign key to point to.
ALTER TABLE tracking.plots
    ADD UNIQUE (planting_site_id, id);

CREATE TABLE tracking.plantings
(
    id               BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    delivery_id      BIGINT NOT NULL REFERENCES tracking.deliveries ON DELETE CASCADE,
    planting_type_id INTEGER NOT NULL REFERENCES tracking.planting_types,
    planting_site_id BIGINT NOT NULL REFERENCES tracking.planting_sites ON DELETE CASCADE,
    plot_id          BIGINT REFERENCES tracking.plots ON DELETE CASCADE,
    species_id       BIGINT NOT NULL REFERENCES species,
    created_by       BIGINT NOT NULL REFERENCES users,
    created_time     TIMESTAMP WITH TIME ZONE NOT NULL,
    num_plants       INTEGER NOT NULL,
    notes            TEXT,

    -- Planting type 2 is "Reassignment From"
    CONSTRAINT num_plants_positive_unless_reassignment_from
        CHECK (planting_type_id = 2 AND num_plants < 0 OR planting_type_id <> 2 AND num_plants > 0),
    FOREIGN KEY (planting_site_id, delivery_id) REFERENCES tracking.deliveries (planting_site_id, id),
    FOREIGN KEY (planting_site_id, plot_id) REFERENCES tracking.plots (planting_site_id, id)
);

CREATE INDEX ON tracking.plantings (delivery_id);
CREATE INDEX ON tracking.plantings (plot_id);
CREATE INDEX ON tracking.plantings (species_id);
