CREATE TABLE organization (
    id BIGINT PRIMARY KEY,
    name TEXT NOT NULL
);

COMMENT ON COLUMN organization.id
    IS 'Assigned centrally; matches the organization ID on the cloud service.';

CREATE TABLE account (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    email_address TEXT NOT NULL,
    password_hash TEXT NOT NULL,
    full_name TEXT NOT NULL,
    organization_id INTEGER NOT NULL REFERENCES organization,
    organization_admin BOOLEAN DEFAULT FALSE NOT NULL,
    super_admin BOOLEAN DEFAULT FALSE NOT NULL,
    deleted BOOLEAN DEFAULT FALSE NOT NULL,

    CONSTRAINT account_email_address_excl EXCLUDE (email_address WITH =) WHERE (NOT deleted)
);

COMMENT ON COLUMN account.password_hash
    IS 'Bcrypt hash of the password.';
COMMENT ON COLUMN account.super_admin
    IS 'If true, account is an admin of the service as a whole, not just a single organization.';
COMMENT ON CONSTRAINT account_email_address_excl ON account
    IS 'Email address must be unique for active (non-deleted) accounts.';

CREATE TABLE api_key (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    hash TEXT NOT NULL,
    key_part TEXT NOT NULL,
    organization_id INTEGER NOT NULL REFERENCES organization,
    created_time TIMESTAMP WITH TIME ZONE NOT NULL,
    revoked_time TIMESTAMP WITH TIME ZONE,

    UNIQUE (hash)
);

COMMENT ON COLUMN api_key.hash
    IS 'Lower-case hexadecimal SHA256 hash of API key.';
COMMENT ON COLUMN api_key.key_part
    IS 'Excerpt of key for display in key management UIs.';
COMMENT ON COLUMN api_key.revoked_time
    IS 'If non-null, key is no longer valid.';

CREATE TABLE notification (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    organization_id BIGINT NOT NULL REFERENCES organization,
    created_time TIMESTAMP WITH TIME ZONE NOT NULL,
    message TEXT NOT NULL,
    source TEXT NOT NULL
);

CREATE TABLE notification_destination_type (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE notification_destination (
    notification_id BIGINT NOT NULL REFERENCES notification,
    type_id INTEGER NOT NULL REFERENCES notification_destination_type,
    destination TEXT NOT NULL,
    completed_time TIMESTAMP WITH TIME ZONE
);

COMMENT ON COLUMN notification_destination.completed_time
    IS 'If null, notification has not been successfully processed yet.';

CREATE TABLE notification_ack (
    notification_id BIGINT NOT NULL REFERENCES notification,
    acked_time TIMESTAMP WITH TIME ZONE,
    account_id BIGINT NOT NULL REFERENCES account
);

CREATE TABLE site (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    organization_id BIGINT NOT NULL REFERENCES organization,
    name TEXT NOT NULL,
    latitude NUMERIC(10, 7) NOT NULL,
    longitude NUMERIC(10, 7) NOT NULL,
    locale TEXT,
    timezone TEXT
);

COMMENT ON COLUMN site.locale
    IS 'Default locale at the site; an IETF BCP 47 language tag such as en-US.';
COMMENT ON COLUMN site.timezone
    IS 'Name of time zone at site; an IANA tz database zone name.';

CREATE TABLE site_module_type (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE site_module (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_id BIGINT NOT NULL REFERENCES site,
    type_id INTEGER NOT NULL REFERENCES site_module_type,
    name TEXT NOT NULL,
    latitude NUMERIC(10, 7),
    longitude NUMERIC(10, 7)
);

CREATE TABLE device_type (
    id INTEGER PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name TEXT NOT NULL
);

CREATE TABLE device (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    device_type_id INTEGER NOT NULL REFERENCES device_type,
    name TEXT NOT NULL,
    watchdog_seconds INTEGER
);

COMMENT ON COLUMN device.watchdog_seconds
    IS 'How long to wait for an update from the device before publishing notifications about its absence.';

CREATE TABLE timeseries_type (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE timeseries (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    type_id INTEGER NOT NULL REFERENCES timeseries_type,
    device_id BIGINT REFERENCES device,
    name TEXT NOT NULL,
    units TEXT, -- TODO: Should this be an enumerated value? Does it need to be localizable?
    decimal_places INTEGER,

    -- TODO: Should this include retention settings (number of records or amount of time)?

    CHECK ( decimal_places >= 0 )
);

COMMENT ON COLUMN timeseries.units
    IS 'For numeric timeseries, the units represented by the values; unit names should be short (possibly abbreviations) and in the default language of the site.';
COMMENT ON COLUMN timeseries.decimal_places
    IS 'For numeric timeseries, the number of digits after the decimal point to display.';

CREATE TABLE timeseries_value (
    timeseries_id BIGINT NOT NULL REFERENCES timeseries,
    created_time TIMESTAMP WITH TIME ZONE NOT NULL,
    value TEXT NOT NULL
);

CREATE UNIQUE INDEX ON timeseries_value (timeseries_id, created_time DESC);

CREATE TABLE seedbank_project (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    name TEXT NOT NULL,
    notes TEXT
);

CREATE TABLE app_device (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    seed_collector_app_version TEXT
-- device_info column is added in a separate migration since its type is DB-specific
);

CREATE TABLE collection_site_location (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    name TEXT NOT NULL,
    latitude NUMERIC(10, 7) NOT NULL,
    longitude NUMERIC(10, 7) NOT NULL,
    landowner TEXT,
    notes TEXT,
    needs_review BOOLEAN NOT NULL
);

COMMENT ON COLUMN collection_site_location.needs_review
    IS 'True if new data from seed collector app that needs review.';

CREATE TABLE species (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    created_time TIMESTAMP WITH TIME ZONE NOT NULL,
    modified_time TIMESTAMP WITH TIME ZONE NOT NULL,
    endangered BOOLEAN,
    rare BOOLEAN,
    needs_review BOOLEAN,
    target_refrigerated_humidity INTEGER,
    target_frozen_humidity INTEGER
);

CREATE INDEX ON species (created_time);  -- For "15 new species since last week" summary

COMMENT ON COLUMN species.target_frozen_humidity
    IS 'Target relative humidity percentage for frozen seeds.';
COMMENT ON COLUMN species.target_refrigerated_humidity
    IS 'Target relative humidity percentage for refrigerated seeds.';
COMMENT ON COLUMN species.needs_review
    IS 'True if new data from seed collector app that needs review.';

CREATE TABLE species_name (
    species_id BIGINT NOT NULL REFERENCES species,
    modified_time TIMESTAMP WITH TIME ZONE NOT NULL,
    locale TEXT NOT NULL,
    name TEXT NOT NULL,

    PRIMARY KEY (species_id, locale),
    UNIQUE (name, locale)
);

CREATE TABLE collector (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    name TEXT NOT NULL,
    notes TEXT
);

CREATE TABLE storage_location (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    name TEXT NOT NULL
);

COMMENT ON COLUMN storage_location.name
    IS 'E.g., Freezer 1, Freezer 2';

CREATE TABLE accession_state (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE accession (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    app_device_id BIGINT NOT NULL REFERENCES app_device,
    number TEXT NOT NULL,
    seedbank_project_id BIGINT REFERENCES seedbank_project,
    species_id BIGINT NOT NULL REFERENCES species,
    collection_site_location_id BIGINT NOT NULL REFERENCES collection_site_location,
    collected_date DATE NOT NULL,
    received_date DATE,
    active BOOLEAN NOT NULL,
    needs_review BOOLEAN NOT NULL,
    state_id INTEGER NOT NULL REFERENCES accession_state,
    germination_testing BOOLEAN, -- TODO: Should this be NOT NULL, or can it be unknown?
    primary_collector_id BIGINT NOT NULL REFERENCES collector,
    founder_tree TEXT,           -- TODO: Is this the right data type?
    collection_trees INTEGER,    -- TODO: NOT NULL?
    environmental_notes TEXT,
    field_notes TEXT,
    target_refrigerated_humidity INTEGER,
    target_frozen_humidity INTEGER,
    processing_start_date DATE,  -- TODO: Is this recording a past event or a future schedule?
    seeds_counted INTEGER,
    subset_weight NUMERIC,       -- TODO: Will this always be in grams?
    subset_count INTEGER,
    total_weight NUMERIC,
    est_seed_count INTEGER,
    test_seeds_filled INTEGER,
    test_seeds_empty INTEGER,
    test_seeds_compromised INTEGER,
    drying_start_date DATE,      -- TODO: Is this set ahead of time (a planned date)?
    drying_end_date DATE,
    drying_move_date DATE,
    processing_notes TEXT,
    storage_start_date DATE,
    storage_end_date DATE,
    storage_packets INTEGER,
    storage_location_id BIGINT REFERENCES storage_location,
    storage_notes TEXT
);

COMMENT ON COLUMN accession.number
    IS 'Displayed as the accession number to the user.';
COMMENT ON COLUMN accession.needs_review
    IS 'True if new data from seed collector app that needs review.';
COMMENT ON COLUMN accession.seeds_counted
    IS 'For full manual count, e.g., for big seeds.';

CREATE TABLE accession_secondary_collector (
    accession_id BIGINT NOT NULL REFERENCES accession,
    collector_id BIGINT NOT NULL REFERENCES collector,
    PRIMARY KEY (accession_id, collector_id)
);

CREATE UNIQUE INDEX ON accession_secondary_collector (collector_id, accession_id);

CREATE TABLE withdrawal_destination (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    destination TEXT NOT NULL
);

CREATE TABLE withdrawal_purpose (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    purpose TEXT NOT NULL
);

CREATE TABLE withdrawal (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    accession_id BIGINT NOT NULL REFERENCES accession,
    date DATE NOT NULL,
    seeds_withdrawn INTEGER NOT NULL,
    destination_id BIGINT NOT NULL REFERENCES withdrawal_destination,
    purpose_id BIGINT NOT NULL REFERENCES withdrawal_purpose
);

CREATE TABLE germination_seed_type (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    seed_type TEXT NOT NULL
);

CREATE TABLE germination_substrate (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    substrate TEXT NOT NULL
);

CREATE TABLE germination_treatment (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    site_module_id BIGINT NOT NULL REFERENCES site_module,
    treatment TEXT NOT NULL
);

CREATE TABLE germination (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    accession_id BIGINT NOT NULL REFERENCES accession,
    date DATE NOT NULL,                -- TODO: Is this the germination date or the sown date?
    seed_type_id BIGINT NOT NULL REFERENCES germination_seed_type,
    substrate_id BIGINT NOT NULL REFERENCES germination_substrate,
    treatment_id BIGINT NOT NULL REFERENCES germination_treatment,
    seeds_sown INTEGER NOT NULL,       -- TODO: Nullable?
    seeds_germinated INTEGER NOT NULL, -- TODO: Nullable?
    notes TEXT
);

CREATE TABLE bag (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    accession_id BIGINT NOT NULL REFERENCES accession,
    label TEXT
);

CREATE TABLE collection_event (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    accession_id BIGINT NOT NULL REFERENCES accession,
    created_time TIMESTAMP WITH TIME ZONE,
    latitude NUMERIC(10, 7) NOT NULL,
    longitude NUMERIC(10, 7) NOT NULL,
    gps_accuracy FLOAT -- TODO: What type should this be? What unit is it in?
);

CREATE TABLE collection_photo (
    id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    accession_id BIGINT NOT NULL REFERENCES accession,
    created_time TIMESTAMP WITH TIME ZONE,
    latitude NUMERIC(10, 7) NOT NULL,
    longitude NUMERIC(10, 7) NOT NULL,
    gps_accuracy FLOAT -- TODO: What type should this be? What unit is it in?
);






