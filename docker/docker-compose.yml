# Simple service definitions for running the server in a local dev environment. This should
# not be used in production!
#
# To use this, you will need a Keycloak server. You can run one locally if you need to; see
# KEYCLOAK.md in the repo's root directory. Pass the following environment variables to
# "docker-compose" when you launch this:
#
# - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI
# - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID
# - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET
# - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI
#
# (You might prefer to put them in a file called ".env" instead.)
#
version: "3.8"

services:
  postgres:
    image: "postgis/postgis:15-3.3"
    ports:
      - "5432:5432"
    volumes:
      - "./volumes/database:/var/lib/postgresql"
    environment:
      POSTGRES_DB: "terraware"
      POSTGRES_PASSWORD: "terraware"

  terraware-server:
    image: "terraware-server"
    ports:
      - "8080:8080"
    environment:
      - "DATABASE_URL=jdbc:postgresql://postgres:5432/terraware"
      - "DATABASE_PASSWORD=terraware"
      - "SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUERURI"
      - "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTID"
      - "SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENTSECRET"
      - "SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUERURI"
      - "SPRING_THYMELEAF_PREFIX=classpath:templates"
      - "TERRAWARE_PHOTO_DIR=/tmp"
    restart: "on-failure"
    depends_on:
      - "postgres"
